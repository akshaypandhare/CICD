# name: Deploy Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   docker-build-and-push:
#     name: Build, Scan, and Push Docker Image
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout the code
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       # Configure AWS Credentials
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
#           aws-region: "us-east-1"

#       # Log in to Amazon ECR
#       - name: Log in to Amazon ECR
#         id: ecr-login
#         run: |
#           aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
#           | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

#       # Set image name and image tag
#       - name: Docker image name and Tag
#         run: |
#           echo "IMAGE_NAME=apandharedev/test" >> $GITHUB_ENV
#           echo "IMAGE_TAG=$(echo ${GITHUB_SHA} | cut -c1-6)" >> $GITHUB_ENV

#       # Build Docker image
#       - name: Build Docker Image
#         run: |
#           cd src && docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
#           docker image ls

#       # Scan Docker image with Trivy
#       - name: Scan with Trivy
#         uses: aquasecurity/trivy-action@0.28.0
#         with:
#           image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#       # Tag and Push to ECR
#       - name: Push Docker Image to ECR
#         env:
#           AWS_REGION: ${{ secrets.AWS_REGION }}
#         run: |
#           REPOSITORY_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}"
#           docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} $REPOSITORY_URI:${{ env.IMAGE_TAG }}
#           docker push $REPOSITORY_URI:${{ env.IMAGE_TAG }}

#       - name: Copy the image tag in the S3 bucket.
#         env:
#           bucket_name: test-cicd-bucket-apandhare
#         run: |
#           echo ${{ env.IMAGE_TAG }} | aws s3 cp - s3://$bucket_name/latest-develop-sha.txt